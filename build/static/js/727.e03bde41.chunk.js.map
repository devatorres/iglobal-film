{"version":3,"file":"static/js/727.e03bde41.chunk.js","mappings":"+NAQMA,EAAS,yCAAG,kGAC0F,OADjFC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAY,EAAZA,aACnCC,EAAW,UAAMC,EAAAA,EAAO,kBAAUJ,EAAO,2BAAmBK,EAAAA,EAAO,6BAAqBH,GAAY,SAEnFI,MAAMH,EAAK,CAChCI,OAAQ,OACRC,QAAS,CACP,eAAgB,kCAElBC,KAAMC,KAAKC,UAAU,CAAEV,MAAAA,MACvB,OANY,OAARW,EAAQ,gBAODA,EAASC,OAAM,mFAC7B,gBAXc,sCAaf,ICdMC,EAAgB,yCAAG,gGAImF,OAH1Gd,EAAO,EAAPA,QACAE,EAAY,EAAZA,aAEMC,EAAW,UAAMC,EAAAA,EAAO,kBAAUJ,EAAO,2BAAmBK,EAAAA,EAAO,6BAAqBH,GAAY,SAEnFI,MAAMH,EAAK,CAChCI,OAAQ,SACRC,QAAS,CACP,eAAgB,oCAElB,OALY,OAARI,EAAQ,gBAMDA,EAASC,OAAM,mFAC7B,gBAbqB,sCAetB,I,UCgBA,EAhCgB,SAAH,GAA0C,IAApCb,EAAO,EAAPA,QACjB,GAA0Be,EAAAA,EAAAA,UAASC,EAAAA,GAAa,eAAzCf,EAAK,KAAEgB,EAAQ,KACdC,GAASC,EAAAA,EAAAA,KAATD,KAsBR,MAAO,CACLjB,MAAAA,EACAgB,SAAAA,EACAlB,UAvBsB,WAKtBA,EAAU,CAAEC,QAAAA,EAASC,MAAAA,EAAOC,aAAkB,OAAJgB,QAAI,IAAJA,OAAI,EAAJA,EAAME,mBAC7CC,MALqB,SAACT,GAAyB,IAM/CU,OAJmB,SAACC,GAAwB,GAKjD,EAgBEC,gBAdsB,WAKtBV,EAAiB,CAAEd,QAAAA,EAASE,aAAkB,OAAJgB,QAAI,IAAJA,OAAI,EAAJA,EAAME,mBAC7CC,MALqB,SAACT,GAAyB,IAM/CU,OAJmB,SAACC,GAAwB,GAKjD,EAQF,E,SCQA,EAnCsC,SAACE,GAAW,IAAD,EACvCzB,EAAYyB,EAAZzB,QACAkB,GAASC,EAAAA,EAAAA,KAATD,KACR,EAAwDQ,EAAQ,CAAE1B,QAAAA,IAA1DC,EAAK,EAALA,MAAOgB,EAAQ,EAARA,SAAUlB,EAAS,EAATA,UAAWyB,EAAe,EAAfA,gBAiB9BG,EAAuC,QAAvB,EAAGT,EAAKU,uBAAe,aAApB,EAAsBC,MAC7C,SAACC,GAAU,OAAKA,IAAO9B,CAAO,IAGhC,OACE,iCACE,kBAAM+B,SArBW,SAACC,GACpBA,EAAMC,iBACNlC,GACF,EAkBiC,WAC3B,mBAAQmC,KAAK,SAAQ,oBACrB,kBAAOA,KAAK,SAASjC,MAAOA,EAAOkC,SAbpB,SAACH,GACpB,IAAMI,EAAsBC,OAAOL,EAAMM,OAAOrC,OAChDgB,EAASmB,EACX,OAYKT,IAAW,mBAAQY,QApBC,SAACP,GACxBA,EAAMC,iBACNT,GACF,EAiBkD,kCAGpD,C","sources":["services/rateMovie.ts","services/deleteRatedMovie.ts","hooks/useRate.ts","components/movieRate/index.tsx"],"sourcesContent":["import { API_KEY, API_URL } from 'constants/dbApi'\r\n\r\ntype RateMovieProps = {\r\n  movieId: number\r\n  value: number\r\n  guestSession: string\r\n}\r\n\r\nconst rateMovie = async ({ movieId, value, guestSession }: RateMovieProps) => {\r\n  const url: string = `${API_URL}/movie/${movieId}/rating?api_key=${API_KEY}&guest_session_id=${guestSession}`\r\n\r\n  const response = await fetch(url, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8'\r\n    },\r\n    body: JSON.stringify({ value })\r\n  })\r\n  return await response.json()\r\n}\r\n\r\nexport default rateMovie\r\n","import { API_KEY, API_URL } from 'constants/dbApi'\r\n\r\ntype DeleteRatedMovieProps = {\r\n  movieId: number\r\n  guestSession: string\r\n}\r\n\r\nconst deleteRatedMovie = async ({\r\n  movieId,\r\n  guestSession\r\n}: DeleteRatedMovieProps) => {\r\n  const url: string = `${API_URL}/movie/${movieId}/rating?api_key=${API_KEY}&guest_session_id=${guestSession}`\r\n\r\n  const response = await fetch(url, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8'\r\n    }\r\n  })\r\n  return await response.json()\r\n}\r\n\r\nexport default deleteRatedMovie\r\n","import { useState } from 'react'\r\nimport { DEFAULT_RATE } from 'constants/default'\r\nimport rateMovie from 'services/rateMovie'\r\nimport deleteRatedMovie from 'services/deleteRatedMovie'\r\nimport useUser from './useUser'\r\n\r\nconst useRate = ({ movieId }: { movieId: number }) => {\r\n  const [value, setValue] = useState(DEFAULT_RATE)\r\n  const { user } = useUser()\r\n\r\n  const rateSingleMovie = () => {\r\n    const successResponse = (response: any): void => {}\r\n\r\n    const errorResponse = (error: Error): void => {}\r\n\r\n    rateMovie({ movieId, value, guestSession: user?.guest_session_id })\r\n      .then(successResponse)\r\n      .catch(errorResponse)\r\n  }\r\n\r\n  const deleteRateMovie = () => {\r\n    const successResponse = (response: any): void => {}\r\n\r\n    const errorResponse = (error: Error): void => {}\r\n\r\n    deleteRatedMovie({ movieId, guestSession: user?.guest_session_id })\r\n      .then(successResponse)\r\n      .catch(errorResponse)\r\n  }\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    rateMovie: rateSingleMovie,\r\n    deleteRateMovie\r\n  } as const\r\n}\r\n\r\nexport default useRate\r\n","import { FC } from 'react'\r\nimport useRate from 'hooks/useRate'\r\nimport useUser from 'hooks/useUser'\r\nimport './styles.css'\r\n\r\ninterface MovieRateProps {\r\n  movieId: number\r\n}\r\n\r\nconst MovieRate: FC<MovieRateProps> = (props) => {\r\n  const { movieId } = props\r\n  const { user } = useUser()\r\n  const { value, setValue, rateMovie, deleteRateMovie } = useRate({ movieId })\r\n\r\n  const handleSubmit = (event: React.FormEvent) => {\r\n    event.preventDefault()\r\n    rateMovie()\r\n  }\r\n\r\n  const handleDeleteRate = (event: React.FormEvent) => {\r\n    event.preventDefault()\r\n    deleteRateMovie()\r\n  }\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const parsedValue: number = Number(event.target.value)\r\n    setValue(parsedValue)\r\n  }\r\n\r\n  const isRated: boolean = user.rated_movies_id?.find(\r\n    (id: number) => id === movieId\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <button type=\"submit\">Votar</button>\r\n        <input type=\"number\" value={value} onChange={handleChange} />\r\n      </form>\r\n      {isRated && <button onClick={handleDeleteRate}>Borrar votaci√≥n</button>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MovieRate\r\n"],"names":["rateMovie","movieId","value","guestSession","url","API_URL","API_KEY","fetch","method","headers","body","JSON","stringify","response","json","deleteRatedMovie","useState","DEFAULT_RATE","setValue","user","useUser","guest_session_id","then","catch","error","deleteRateMovie","props","useRate","isRated","rated_movies_id","find","id","onSubmit","event","preventDefault","type","onChange","parsedValue","Number","target","onClick"],"sourceRoot":""}